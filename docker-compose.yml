version: '3.4'

services:
  web:
    image: jwilder/nginx-proxy:alpine
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: web
    networks:
      local:
        aliases:
           - web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - web-certs:/etc/nginx/certs
      - web-dhparam:/etc/nginx/dhparam

  app:
    image: kre100/sharetribe:latest
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: app
    networks:
      local:
        aliases:
          - app
    volumes:
      - app:/opt/app/www
    environment:
      - VIRTUAL_HOST=sharetribe.local
      - VIRTUAL_PORT=3000
      - RAILS_ENV=production
      - RS_DOMAIN=sharetribe.local
      - RS_AUTH_USER=noreply
      - RS_AUTH_PASS=passwd
      - MYSQL_ROOT_PASSWORD=123123123
      - MYSQL_DATABASE=sharetribe_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=passwd
      - MYSQL_HOST=mysql
      - SPHINX_HOST=search
      - redis_host=memcache
      - redis_port=6379
      - redis_db=1
      - redis_expires_in=240

  worker:
    image: kre100/sharetribe:latest
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: worker
    networks:
      local:
        aliases:
          - worker
          - search
    volumes:
      - app:/opt/app/www
    command: worker
    environment:
      - RAILS_ENV=production
      - RS_DOMAIN=sharetribe.local
      - RS_AUTH_USER=noreply
      - RS_AUTH_PASS=passwd

  mysql:
    image: mysql:5.7
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: mysql
    networks:
      local:
        aliases:
          - mysql
    volumes:
      - mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123123123
      - MYSQL_DATABASE=sharetribe_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=passwd

  smtp:
    image: catatnight/postfix
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: smtp
    networks:
      local:
        aliases:
          - smtp
    environment:
      - maildomain=sharetribe.local
      - smtp_user=noreply:passwd

  memcache:
    image: redis:3.2-alpine
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: memcache
    networks:
      local:
        aliases:
          - memcache
    volumes:
      - memcache:/data

  adminer:
    image: adminer:standalone
    deploy:
#      placement:
#        constraints:
#          - node.hostname == node2.cloud.kresto.pp.ua
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        order: start-first
    domainname: sharetribe.local
    hostname: adminer
    networks:
      local:
        aliases:
          - adminer
    ports:
      - 8080:8080

volumes:
  web-certs:
  web-dhparam:
  app:
  mysql:
  memcache:

networks:
  local:
    driver: overlay
